<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="us.mn.state.health.lims.test.valueholder.TestSection" table="TEST_SECTION" optimistic-lock="version" dynamic-update="true">
        <id name="id" type="us.mn.state.health.lims.hibernate.resources.usertype.LIMSStringNumberUserType">
            <column name="ID" precision="10" scale="0" />
            <generator class="sequence">
            	<param name="sequence">test_section_seq</param>
            </generator>
        </id>
        <version name="lastupdated" column="LASTUPDATED" type="timestamp" access="field"/>

        <many-to-one name="organization" class="us.mn.state.health.lims.organization.valueholder.Organization" fetch="select">
            <column name="ORG_ID" precision="10" scale="0" />
        </many-to-one>
        <property name="testSectionName" type="java.lang.String">
            <column name="NAME" length="20" />
        </property>
        <property name="description" type="java.lang.String">
            <column name="DESCRIPTION" length="60" not-null="true" />
        </property>
        <property name="isExternal" type="java.lang.String">
            <column name="IS_EXTERNAL" length="1" />
        </property>

  		<property name="isActive" column="is_active"  type="java.lang.String"/>      
        <many-to-one name="localization" class="us.mn.state.health.lims.localization.valueholder.Localization" fetch="select" >
            <column name="name_localization_id" precision="10" scale="0" />
        </many-to-one>
        
        <many-to-one name="parentTestSection" class="us.mn.state.health.lims.test.valueholder.TestSection" fetch="select">
             <column name="PARENT_TEST_SECTION" precision="10" scale="0" />
        </many-to-one>

		<property name="sortOrderInt" column="sort_order" type="integer" />
		
		<property name="nameKey" type="java.lang.String" column="display_key"/>
    </class>
    <query name="testsection.getNext">
         from TestSection ts order by ts.organization.organizationName, ts.testSectionName
      </query>
      <query name="testsection.getPrevious">
         from TestSection ts order by ts.organization.organizationName desc, ts.testSectionName desc
      </query>
</hibernate-mapping>
